{"hash":"f083906a00e5fb8455e57cbaed6089a7fc1c675c","data":{"blog":{"title":"PySpark UDF的坑与绕","path":"/posts/py-spark-udf/","image":{"type":"image","mimeType":"image/jpeg","src":"/assets/static/lukasz-szmigiel-jFCViYFYcus-unsplash.872e63c.ee538618820ced4104708b9d6bd84fa6.jpg","size":{"width":1600,"height":800},"sizes":"(max-width: 1600px) 100vw, 1600px","srcset":["/assets/static/lukasz-szmigiel-jFCViYFYcus-unsplash.bb17b12.ee538618820ced4104708b9d6bd84fa6.jpg 480w","/assets/static/lukasz-szmigiel-jFCViYFYcus-unsplash.b28baf0.ee538618820ced4104708b9d6bd84fa6.jpg 1024w","/assets/static/lukasz-szmigiel-jFCViYFYcus-unsplash.872e63c.ee538618820ced4104708b9d6bd84fa6.jpg 1600w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1600 800' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f4494691ab26fbd2372504c129233614'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f4494691ab26fbd2372504c129233614)' width='1600' height='800' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAgAEADASIAAhEBAxEB/8QAGAAAAwEBAAAAAAAAAAAAAAAABQYHAwT/xAAqEAACAgEDBAEDBQEBAAAAAAABAgMEEQAFIQYSEzFBIlFxMkJhgZGCof/EABcBAQEBAQAAAAAAAAAAAAAAAAQDBQH/xAAkEQACAgIBAwQDAAAAAAAAAAABAgADESESE0HBBCIxUWHh8P/aAAwDAQACEQMRAD8AgfRkXl612xDGkoaYZST9LcHg6p3UgV%2brZ0hSFVG97e5aFAqLlCoUDn12n51MujyU6rrSqGPiDSEKvdnC%2bsfbTxum4G1euJ3LWefcdvkCgHuUgsuR%2bAc41L1GTb%2bMeZ2sjGJa%2bqYSvSG/p3Phqy5B5Bw2R%2bPR1K5lazabxlvN560aqEzwYMDn/nVW64vRLs%2b6R5I8tZwcgAkgE86l21biTudVYigLSQSAvwMpXdc41jUuemzDt%2boy9lJxM97objWspUiEYMoB5ds/B5I50pW6t2q0rT2AUWykZIP7uxSP/CP804b9eia7HNY8rtHGR2ZGWJPsYPrHxoE80dmpai5CNajkDPksuFC4x/WmUMeIJEI4TtE3cYs3toB/eIuc/fRS5WcTMpTBeNOffttcnUpSK9s/YTiJY1JzyccZ0Yu2YrFh5K7KMRxqDnkHPOmOx9pH15kzjMUdhurR3fzMzAeMr9JwTnHGdd17cUnkd0zgyRnk8gBtL7KwfvXOPvrXskSP1ktjkHONMNYLcpPeZcJrla50xJZhuvLlHyrRkuhC8DPrnP8AmkFLj19wqzROWkjro3aw4GQf99626e3jw7RcrzhneeJkVX/n5B%2bfxrGvWlNhZHo25IkVSoKZDEKBgn51nU09LmrDUvtxqGNptLuO5TtclULHVZyU%2bk5DD0Pxk/1ruvtHDV3KSRHm80kZDHliQmDn%2bMjWG1F5eoknGxCrUmrtXeIBgo95bn1n7aK77XknsBHRIKRHdIhTB7vtx/Wj2sFcLjGv74lRWSmpLOorJtSQucRNEAqqRyfWND/NOZgFf6mIzg40e3bZ0s22mjHjhDFVTH6gDy2fnXPPs9ZFJRWY8Y7X4z9taqFeIEOamO5//9k=' /%3e%3c/svg%3e"},"image_caption":"Photo by Luasz Szmigiel on Unsplash","excerpt":"使用Python UDF时，发现pyspark.daemon把CPU全部占满","content":"<p>最近使用Spark跑一些千万级别的数据，因为算法是Python写的，所以用到了PySpark，刚开始不太了解PySpark的原理，导致中间遇到很多问题。</p>\n<p>之前其他同事尝试PySpark mllib做机器学习相关的任务，有遇到程序卡死，我的程序后来也遇到了。我将数量级下降到百万级别后，在单机模式下能够正常跑完任务；后来换了一台单机跑全量数据，32核使用local[16]，跑16个线程，使用Python UDF时，发现pyspark.daemon把CPU全部占满。</p>\n<p>在使用 vmstat 定位之后，发现每秒cs (content switch)高达700万次，导致内核消耗的cpu时间超过50%，使用yarn提交到一台8核机器上时，发现每秒cs高达600万次，内核消耗cpu的时间超过了惊人的60%，而空闲和等待IO的占比为0%。</p>\n<p><img src=\"https://raw.githubusercontent.com/momentxu/git_files/master/images/2019/03/28/pyspark_cs_overhead-1553753770199.png\" alt=\"CS切换问题\">\n(图片来自《Learning PySpark》 —— Tomasz Drabas, Denny Lee)</p>\n<p>“其中白色部分是新增的Python进程，在Driver端，通过Py4j实现在Python中调用Java的方法，即将用户写的PySpark程序”映射”到JVM中，例如，用户在PySpark中实例化一个Python的SparkContext对象，最终会在JVM中实例化Scala的SparkContext对象；在Executor端，则不需要借助Py4j，因为Executor端运行的Task逻辑是由Driver发过来的，那是序列化后的字节码，虽然里面可能包含有用户定义的Python函数或Lambda表达式，Py4j并不能实现在Java里调用Python的方法，为了能在Executor端运行用户定义的Python函数或Lambda表达式，则需要为每个Task单独启一个Python进程，通过socket通信方式将Python函数或Lambda表达式发给Python进程执行。</p>\n<p>语言层面的交互总体流程如下图所示，实线表示方法调用，虚线表示结果返回。”——《PySpark 的背后原理》 sharkdtu.com</p>\n<p><img src=\"https://raw.githubusercontent.com/momentxu/git_files/master/images/2019/03/28/pyspark_connect_to_jvm-1553753777680.jpeg\" alt=\"Relationship between PySpark and Spark\">\n(图片来自《PySpark 的背后原理》 sharkdtu.com)</p>\n<p>PySpark是借助Py4j实现Python调用Java，来驱动Spark应用程序，本质上主要还是JVM runtime，Java到Python的结果返回是通过本地Socket完成。</p>\n<p>虽然这种架构保证了Spark核心代码的独立性，但是在大数据场景下，JVM和Python进程间频繁的数据通信导致其性能损耗较多，恶劣时还可能会直接卡死，所以建议对于大规模机器学习或者Streaming应用场景还是慎用PySpark，尽量使用原生的Scala/Java编写应用程序，对于中小规模数据量下的简单离线任务，可以使用PySpark快速部署提交。”——《PySpark 的背后原理》 sharkdtu.com</p>\n<p>总结下其实就是以下两点：</p>\n<ol>\n<li>使用PySpark时，大数据量下，尽量使用Python调Java，而不要用Java调Python（不使用Python UDF）</li>\n<li>尽量使用Scala或者Java写Spark程序，简单程序可以写PySpark</li>\n</ol>\n","humanTime":"22 February 2019","datetime":"Fri Feb 22 2019 12:00:00 UTC+00:00","timeToRead":3,"tags":[{"id":"Spark","title":"Spark","path":"/tags/spark/"}],"category":{"id":"Technology","title":"Technology","path":"/category/technology/","belongsTo":{"totalCount":4,"edges":[{"node":{"title":"Neo4j schema 索引对查询的影响","path":"/posts/neo4j-schema/"}},{"node":{"title":"PySpark UDF的坑与绕","path":"/posts/py-spark-udf/"}},{"node":{"title":"Python memory profiler 上手实践","path":"/posts/python-memory-profiler/"}},{"node":{"title":"(翻译)Scalene - 一个 Python 的高性能 CPU 内存分析器","path":"/posts/scalene-python-cpu/"}}]}},"author":[{"id":"insutanto","name":"许臾insutanto","image":{"type":"image","mimeType":"image/png","src":"/assets/static/author1.fac0014.f32b3d6345829593250abc8f3b922256.png","size":{"width":400,"height":374},"sizes":"(max-width: 400px) 100vw, 400px","srcset":["/assets/static/author1.fac0014.f32b3d6345829593250abc8f3b922256.png 400w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 400 374' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-9ba158a90cb545680afa9a5f3c8a4b2f'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-9ba158a90cb545680afa9a5f3c8a4b2f)' width='400' height='374' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA8CAYAAADWibxkAAAACXBIWXMAAAsTAAALEwEAmpwYAAAPRUlEQVRo3tVbB1hUxxa%2buwsCgtgLoiAqRkUTgxp8ir0HJYkFC3ZQ0YiKxoai2BsqCMEawW6sqIgIdo2YqNEYjf0ZWxJLTGKJyO6dk3Nm76zXdfHxlDWw33e%2bubvsXmbOnPL/58yVJOu8NBY%2bK4/SASUC5SuU7Si7UL5GiUYZiVIPpZAir7tXnn5plfF9lFiULii7UZ6iQA7kIcofKKtQiudHJYjJLrewOBklC0WPYlBEr/rM/PvH8tvui8UXQ7mlLEKvCFMJ/I/3sqIcUFwm31mBLcp5ZQEGswXy3dVqNXzUaNTXGrzWMvpMsQoa481cK0%2b/dMoYrFo8U5u1VqMxXeu0WovXigXQ%2bBilTH60gGNmu2/aYbHY9s0%2b4tfDevtDF7%2bG/NqvSV3wb%2b7Dijg76m1tbeizhPy0%2b2KHKis7J3aSqU2%2bf5fWsGLWMICbe2DGyN5wLiUe4P4hWDJ1CBzdMAfgzl72%2bMymrFmj%2btD3h9MNnQra2%2bQn829lbv42Njq%2b%2bPc8XIFd3gnw636QL%2b3gI1zb9eL6%2bm7I%2bimJwe9H9N98PZd%2bM5RuWLF8mXylgJ6q6P%2bSz%2b9bNR13Pg2endsKcCUZDBd3oGwH/YXt8PynJNDjtYGUcX23/tdjq6F4kULr6Yb%2bzXx0%2bSEGCAX0EwpAn2di52MnhvDFw610gBt7%2bIKzLiTxa7779DeSq7sYuoGMbgCeFcpeUwXBfGMB7RSz57m/RDFnoN2Eh0cAbqfDnoSpEDNhACydHgrLUBZP%2bRw2x4XDD8lxcARjQFriVDZ6QCc2LiQAqni4PqM0qNNp%2b1MoQCmQ5yEwBrsW6rxfq1pFSFkeCVu%2bDOcBcMqwQDi9YyHMGxcMwQGtwLeOF2CQg/IuJcCjXGkoW6oY/61v7erQsXUDiiMVbW1sxit8IW9D46oVy1GwiiroYPckqHNLcHZy4C5wfnc8PDq9EVZHjYSMTVGAQQ4WjO/P40Lqiim4%2b7EwvM8ncO/4WmjRoBZXwM3DCYwURgQJ79cVxxp5OiVibhcTmzRtRE84mxxniIkYyN5/rwLcPb4GXeAonNi2ANITpwE8OAyX05fCkB7tMCakwffbY7hy4LcDkDg7DOImhTBMjXJIt7akgOYOdgUoHZbK29jXRicUsPHbLfMpr%2bu7t2/M4OdUkCn1Yd4/uysOVs4JA/jjKM8CcHsvwN2DHA/8hRbyCAMfAiG4kLqIQeZJGNClDcHh%2bQXt7YLyPCBC3xdBMAp3EODZCf2ZnbE8tfHFKjLzi95wcM1Mivb8/Vczh8EKlITZw%2bHktmjo06E5hA8KYIfWzmLN639AFrDmkxY%2b9vkBDovdqVfZvSxcSl9CKY/Jl3YyAj84cqDz8OQGiJ88GOZjEKSAyFEhpsJt8eN5kNyFARO/x46sn8M8ypcmBTRQ7psvwJBQAkVsmDum33P0d0Y5H3ebKwP%2bu5vgLjw/vw1xwHZ%2bza3jl31Gl0BlIBhi8OS4/vMefqSA8crW6/I%2bEFACIebtDYL0HFo3i4KbbFLC5Z2Moz1ygavJHPmRhRAoEmgwi76LcHh%2beDApYAndE%2bNAviBE4uVZwNZmAtUEihRyfEppEO4dNBD0JSXggpmICZwb8ICYzkkR3EhlZB2ogKyRQZ%2bRAqZyC9DkAwvI5tW7ZLHCPMAh1JWJ%2bMjKrovF0/tTSTFs3rggRimRGCHyBYMSAxrmJ0psigXoBuoJBzes4/VQifwypkSMBSkm8oMpkG2KHQdRY4Pg/nfrZMQMz4M7t6LFrxXRP3/Vw2x0NF9tJbcyArtrqlYqd/HvH7dA5vlt8r7VMxghQwI%2bnCP8%2bQ3A4%2bOMxgt7FkPbxnVo8Wlenm4OeTb94ST5OH1ELypYCDKUnZ%2bu2LhwLLE%2bPVkBcf0%2bHVog0GkNE4d0YxMGd2EDurZBXlCdgM8NivzHN8/T5lnTb1qvJh%2bRwGgsLdrJ0Z4obMvK7i5%2bzk4FF6GScPH7yP95FsCAx578sBm%2bjhkDYX0/ZYO6fyz369SSCNH1aWE9y6rvhawybyoBCYpp4ZXcXBxx%2bJjyP2rkWxwfFS5UECiKI6IjQCRT5FeCnjENXktRXOCo0QX%2bOibHRw6C6pXdTtkXsA0kBUrG5oqU1yxBg4vjPonU1cWlVLFoDHg3pVebGmz9gtEyQWL0e9PiReSnkdIi5n8OlDIp9T08Ki%2bfMdS8epyKUsGs5pB7LxudTmrl%2b6HpfVri1JwUPnnlR6PRPJBe7foYMGSbmhxJiyYwxAC81qdevNnIhGU08K7GO0bILdR9hDsoHla1hKLOTpr6H1bV1qtVVRs9vr8GkQj//FRStKWvf6laeJaq%2bmvq8ogdpGrwjiURBIR47U9WLV4IL43dPciIBCkIUt0lylTu%2bZ21soFFja5bMEqLuVmHnFyHKUynYnsxqqKnLFno%2bkhm3R%2bShFnDcZEHTKYvkCCHyKiczYgDzF1IdU/RJRqX666A5j8WI%2b9ZvHT%2bz4dVGyF0bYVSxNJ3HeztPlPaVuqOj8XFSxY6QeEhAUD1ARLadb7zuPiDa2eaSuca1fdV9xWK/hPFNTtsgPhDKl7UmV8XK%2bwkYQbi17ie7BXgUa5021VzRwAyr9Of92h3//ukGCpY3sTcnNapTYPJ6JO98cbN8KvuKCeNO6s1mE3wtUKLUhQHbRrVht8y1hjZH1pEWsJUsCtg%2b4rFWFCCsIK5lqwA7yF1bF1fXKMLA8kLoqZ7YegfVPWQEmeHmd67IG19uiUunLeo1s0fZTibHAfXD3wFVJq%2beTgBftgZCynLJz9Gd2CoTdHpydHi1YKT4GOp4kUgdcVkXgyx5C7ZKEFYwT2UEmorqOHpbloMAqzX1g1mjOylJeUE%2bjfRmpT4RVCHbcTLMQM8q%2b1VWR7Vv6N8OX2pgSO32%2bl6/JuBandIZtiNQwmsbePaOZn0a5WQnZu8RgGmZgvKIHMr8HQvq45ldpGh3VMGB/pNozdozba446%2bNG85ThvfIQIwOsZNCYEP0aP2G6DGGi3sWs79/3Mooj/%2bUukhOXzmNURX39xPrWcO6Xm%2bsBLFgjdIez%2bHvmPSi2XpQbQEInkQ80Hl7VQpEKz5DwTa0V/tQ86yPOx8a2rP94bEDOxPLDFNnAbv2zT6a49e07uM9CVPg6r5lQAwtY1OUjEGL8ciNIxUvqXIze1RfPjEbCztqJVEHW0qNVWjShZ0Kip2tgOn71MNTG3j3adYXfe7iZ22Qp9QuU6KoX9d2jSbNGd33PDVcIod2Bwz4T/DvC0SAUJtP%2baKFnUagRRzau3Ja5r1v1/JaHvy2n4l%2bHkFYKmJaiNrvQoQb9KHJLpseastr8aHd1lK5HV02kxjnnaMr9ed3x%2btPbF0g/3xwBY9lR9bPhi8jB2UGfOwrlyjqfBV/liR5e1Xmqy5ga6OZPDTQ3E88alWr2BEj9y9UzX12bqvMlBL3KcwW73jhwgqEApbRBAF%2b5EEvduLADCqxI9gycGRJm3b3gIw0Ww%2bPMgxUlqOyO%2bIbaNPQG9xcStJ95ovF8xG1IhVyctAgj7cByBRWUVIyntyC7YsjZF7EvJoMZGqlihc2HXN5hwowjwMSblI3XoW%2bsUdGBVAvguYpUyZLnBMGo4I7UIZ76lu7%2bq33PFzTypUpEUmNrFci4fSwXpJRqyChaesUrtAehYMf5PSM8jev9SOvb%2bJTUwmE2n9DARcRYtPOlURafV/hGzL6v%2bHBiXXQt2MLKOTosF8yHrJornAJu5ygYPNu71Dhe5za3k43Mjf8h8jjs01tVlSArPxPwgNOo/t3XMXb6leSs8gCfs1YDdUqlSci42dpUbS5bmVL6tBqtTniCGgJUfQ75P/6W0cSeauL43cMhIsmD37jVPg2SlD%2b312k4%2bHX9i8n06csRdmKkCYpyJfmjllN6%2bhgZ4NpV/smROqlGn9972p6weK4C2CqObZx7jsNgsqROhMoipsU8pwC37Nz26iZqqcKE34%2bW%2bEFto4O9lKbRt5vRpIwMHIF2BewXUT/MGJIVwOaPaNuDj/Tg9r%2b5dgqcCro8M6zAeZ21rTe%2b8Z5XElmvNKMm4NUnuoTpd%2b6kFrPu4rUr1NLHgMihwa2RvyMux1lQADERCeHguDf57ZCjSruOYWzb7HzxntX8XCF/atnsE0Lx8KZHbG8tqjQaT0dwhDApnAhR52aCP3fr8Yf1cC8GsIVED4oICQmYgARIz3V8kURgzc70Qpa%2bXpbOuiYqyKCLHIUjkJ5lelaChVXGBVa6TNkrpQdauZK1cjezlZCisxv0qB29ZmInoi%2b6jHQMFMcoMYm%2bl%2bPT5paPROIe1Pj5PC62RzVGeE55vxb6XpCeshS02i%2bGAc0RI3fstevRYJRXmhxJR1eEgoQdTxezLh/iAiH1RUgsszEId0ASRm3POog60kB9w8Zoo3HbYKU2JU71SKEvlwB7q6lNvMjLjfTDOqeXpZiAWMHdrK6CwgF0HkCyj7KPHghldwSER49X%2bCSq10kxM9cAZ3b%2bm7k9btrKXp1NfeFAjpbXQFC%2bAErhOJkifwMAVolNVNRQZtprv7NfbS5ZQCEmLgCggNapRP8xUUb1G1t4QJDe/tb1QUEzyji7AjX0df5maNLO03mHxnanf4ekOvF0hcKaH2YTnIqCoCXg%2bABCPRvYmUFGM2fzg/S8RoyeX7S5OoumTJRnRqVqZfopKBWTS4qwMgGe37aNIUfZ72SbLIAU2//HRAigS8qubkYzxGj33MkeveAns4eU7iieRK%2bF1XgXHld3ruUKwCh5BJqayO/Nij9PcYxAO4E7UiZkkWtSomFArw83XAOqTz48XSMbtnz02Z0lNbTKi30D6p6cH9CMjFYOfGl54GHWlg0AWSFVGGxduATGaBuTU%2be%2b/nu39mrv5i2mAjaSiPp8dGii1itY1Rt3rigx/DHUUJdpASZiqQYgBgdbyV2pmQAZg0RPUJUAOMKoIIHxqT%2bXVpTRae61fqF/s18pDlj%2bvEbV3AtNf/4pnnGY%2b1UEXp4BC6lLZGRlPDH3zQvngzLqRiklx%2bby1bQBfiInEPGmEOELPP45nmk8Fk0N3SNd3J4SoOLHYYRP2NhxMAHsRMHPlEOMFmVBKnv71q6uPHZAuQACM9PS8Yn0/6V4zPuSnkpAif3DY7pkvHJUHoUdhPKGsn4aGy8ws6In09HmYwyUTI%2bBzheJfR%2bkmQ8DjdDaX0tRFmMkojBleoRO5v61LyKgfh7ZH1UyKyUW6b/D5iHXD7Pi%2bNmAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"path":"/author/insutanto/","bio":"又一个喜欢摄影和音乐的程序员。Java、Python双修，A6000系列、A7系列的索尼玩家，最近痴迷Rap。"}]},"related":{"edges":[]}},"context":{"recordId":"86b07dd34b54f9bb9419aa1c1c3d0aaa","tags":["Spark"]}}